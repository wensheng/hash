[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hashcli"
version = "0.1.0"
description = "Hash - Intelligent CLI system with dual-mode functionality (LLM chat and command proxy)"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [
    {name = "Wensheng Wang"},
]
keywords = ["cli", "llm", "assistant", "terminal", "ai", "hash"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: System Shells",
    "Topic :: Utilities",
]

dependencies = [
    "openai>=1.0.0",
    "google-generativeai>=0.3.0",
    "anthropic>=0.28.0",
    "typer[all]>=0.9.0",
    "rich>=13.0.0",
    "pydantic>=2.0.0",
    "aiohttp>=3.8.0",
    "toml>=0.10.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "flake8>=6.0.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/wensheng/hash"
Repository = "https://github.com/wensheng/hash.git"
Documentation = "https://github.com/wensheng/hash/docs"
"Bug Tracker" = "https://github.com/wensheng/hash/issues"

[project.scripts]
hashcli = "hashcli.main:app"

[tool.setuptools.packages.find]
where = ["."]
include = ["hashcli*"]
exclude = ["tests*", "docs*", "ai*", "shell*"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | shell
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=hashcli",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=90",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "security: Security tests",
    "performance: Performance tests",
    "slow: Tests that take a long time to run",
]

[tool.coverage.run]
source = ["hashcli"]
parallel = true
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
